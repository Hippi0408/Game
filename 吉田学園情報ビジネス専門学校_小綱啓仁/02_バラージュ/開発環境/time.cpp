//=============================================================================
//
// time.cpp
// Author : koduna hirohito
//
//=============================================================================

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "time.h"
#include "number.h"
#include "manager.h"

CTime *CTime::m_pCTime = nullptr;
CNumber *CTime::m_pTime = nullptr;
int CTime::m_nTime = 0;
int CTime::m_nFPS = 0;
//*****************************************************************************
// コンストラクタ
//*****************************************************************************
CTime::CTime()
{
}

//*****************************************************************************
// デストラクタ
//*****************************************************************************
CTime::~CTime()
{
}

//*****************************************************************************
// 初期化
//*****************************************************************************
HRESULT CTime::Init(D3DXVECTOR3 pos, int nDigit, int nNumerical,int nTime,float fSize)
{
	m_pCTime = new CTime;

	m_pTime = new CNumber;

	if (FAILED(m_pTime->Init()))
	{
		return -1;
	}

	m_nFPS = 0;

	SetTimer(nTime);

	m_pTime->SetNumber(pos, nDigit, fSize, nNumerical);

	return S_OK;
}

//*****************************************************************************
// 終了処理
//*****************************************************************************
void CTime::Uninit()
{
	if (m_pTime != nullptr)
	{
		m_pTime->Uninit();
		delete m_pTime;
		m_pTime = nullptr;
	}

	if (m_pCTime != nullptr)
	{
		delete m_pCTime;
		m_pCTime = nullptr;
	}

}

//*****************************************************************************
// 更新処理
//*****************************************************************************
void CTime::Update(MODE_TYPE type)
{
	m_nFPS++;

	if (m_nFPS >= 60)
	{
		m_nFPS = 0;
		m_nTime--;

		if (m_nTime < 0)
		{
			CManager * pManager = GetManager();
			pManager->NextMode(type);
		}
		else
		{
			m_pTime->SetNumerical(m_nTime);

		}
	}
}

//*****************************************************************************
// 描画処理
//*****************************************************************************
void CTime::Draw()
{
	m_pTime->Draw();
}